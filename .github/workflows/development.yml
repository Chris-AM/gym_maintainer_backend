name: Deploy Project
on:
  push
  # Uncomment the following line to run the workflow on push events
  # pull_request:
  #   types:
  #     - closed
  #   # branches:
  #   #   - develop
  #   branches-ignore:
  #     - 'feature/*'
  #     - 'workflows/*'
  #     - 'hotfix/*'
  # workflow_dispatch:
  # push:
  #   branches:
  #     - master
  #   paths-ignore:
  #     - 'README.md'
  #     - './.github/**'
env:
  CACHE_KEY: node-deps
  DB_TYPE: ${{secrets.DEV_DB_TYPE}}
  DB_HOST: ${{secrets.DEV_DB_HOST}}
  DB_PORT: ${{secrets.DEV_DB_PORT}}
  DB_USERNAME: ${{secrets.DEV_DB_TYPE}}
  DB_PASSWORD: ${{secrets.DEV_DB_PASSWORD}}
  DB_NAME: ${{secrets.DEV_DB_NAME}}
jobs:
  check-connection:
    environment: development
    runs-on: ubuntu-latest
    steps:
      - name: Check Connection
        run: echo "Checking connection to ${{env.DB_TYPE}}://${{env.DB_USERNAME}}:${{env.DB_PASSWORD}}@${{env.DB_HOST}}:${{env.DB_PORT}}/${{env.DB_NAME}}"
  lint:
    environment: development
    needs: check-connection
    runs-on: ubuntu-latest
    outputs:
      yarn_cache_dir: ${{ steps.cache_dir.outputs.cache-dir }}
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Get Yarn Cache Dir
        id: cache_dir
        # deprecated
        # echo "::set-output name={name}::{value}"
        # run: echo "::set-output name=cache-dir::$(yarn cache dir)"
        # new way
        # run: echo "{name}={value}" >> $GITHUB_OUTPUT
        run: echo "cache-dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.cache_dir.outputs.cache-dir }}
          key: node-modules-${{ hashFiles('**/yarn.lock') }}
          save-always: true
      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Run Lint
        run: yarn lint
  test:
    environment: development
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ needs.lint.outputs.yarn_cache_dir }}
          key: node-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install Dependencies
        if: needs.lint.outputs.yarn_cache_dir.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Run Tests
        id: test_step
        run: yarn run test
      - name: Publish Test Report
        if: failure() && steps.test_step.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test-report.json
  build:
    environment: development
    needs: [test, lint]
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:14.3
        ports:
          - 5432:5432
    outputs:
      main-file: ${{ steps.main-file_publication.outputs.main-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ needs.lint.outputs.yarn_cache_dir }}
          key: node-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install Dependencies
        if: needs.lint.outputs.yarn_cache_dir.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Build Project
        run: yarn run build
      - name: Publish Distribution
        id: main-file_publication
        run: find dist -type f -execdir echo '' >> $GITHUB_OUTPUT ';'
      - name: Archive Build (Upload Artifact)
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: dist
          # this is an example of how to upload multiple files
          # path: |
          #   dist
          #   package.json
  deploy:
    environment: development
    needs: [build, lint]
    # uses: ./.github/workflows/deploy-job.yml
    # with:
    #   artifact_name: build-artifact
    #   yarn_cache_dir: ${{ needs.lint.outputs.yarn_cache_dir }}
    # secrets: inherit
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ needs.lint.outputs.yarn_cache_dir }}
          key: node-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Download Dist Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: dist
      - name: Install Dependencies
        if: needs.lint.outputs.yarn_cache_dir.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: List Files
        run: ls -la
      - name: Output Connection Data
        run: echo "DB NAME => ${{env.DB_NAME}} DB HOST => ${{env.DB_HOST}} DB PORT => ${{env.DB_PORT}} DB USERNAME => ${{env.DB_USERNAME}} DB PASSWORD => ${{env.DB_PASSWORD}}"
      - name: Run Dist
        run: yarn start:dev
  # print-deploy-result:
  #   needs: deploy
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Get Deploy Result
  #       run: echo '${{needs.deploy.outputs.result}}'
